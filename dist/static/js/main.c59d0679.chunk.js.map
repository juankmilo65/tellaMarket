{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSumary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","components/App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","epics/itemEpics.js","epics/authEpics.js","config/FirebaseConfig.js","index.js","store/configureStore.js"],"names":["SET_STATUS","SIGNIN_EMAL_PASSWORD","SIGNUP_EMAL_PASSWORD","SIGNOUT","SIGNIN_SUCCESS","SIGNIN_FAILED","SIGNOUT_SUCCESS","SIGNOUT_FAILED","SIGNUP_SUCCESS","SIGNUP_FAILED","setStatus","status","type","payload","SignedInLinks","handleSubmit","e","preventDefault","props","Object","assertThisInitialized","_this","fireBase","firebase","signOut","react_default","a","createElement","className","react_router_dom","to","onClick","this","profile","initials","Component","compose","firebaseConnect","connect","SignedOutLinks","state","auth","links","uid","layout_SignedInLinks","layout_SignedOutLinks","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","ownerName","ownerLastName","createAt","calendar","ProjectList","projects","ProjectSumary","Dashboard","_this$props","items","projects_ProjectList","Notification","react_router","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","item","SignIn","email","password","handleChange","setState","defineProperty","target","value","_assertThisInitialize","authData","credentials","objectSpread","signInWithEmailAndPassword","authMessage","onSubmit","htmlFor","onChange","messages","length","text","SignUp","firstName","lastName","newUserData","newUser","signUpWithEmailAndPassword","CREATE_PROJECT","CREATE_PROJECT_SUCCESS","CREATE_ITEM_FAILED","GET_ITEMS","CreateProject","authId","Date","createProject","history","push","App","layout_Navbar","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","projectReducer","arguments","undefined","action","idItem","authReducer","itemEpics","action$","state$","getFS","getFirestore","pipe","ofType","switchMap","concat","of","add","then","doc","catch","err","authEpics","message","createUserWithEmailAndPassword","resp","set","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storeConfigured","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","rootReducer","combineReducers","firestoreReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","reduxFirestore","FirebaseConfig","run","configureStore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","dispatch","createFirestoreInstance","ReactDOM","render","es","react_redux_firebase_es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c59d0679.chunk.js","sourcesContent":["export const SET_STATUS = \"SET_STATUS\";\r\nexport const SIGNIN_EMAL_PASSWORD = \"SIGNIN_EMAL_PASSWORD\";\r\nexport const SIGNUP_EMAL_PASSWORD = \"SIGNUP_EMAL_PASSWORD\";\r\nexport const SIGNOUT = \"SIGNOUT\";\r\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\r\nexport const SIGNIN_FAILED = \"SIGNIN_FAILED\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNOUT_FAILED = \"SIGNOUT_FAILED\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILED = \"SIGNUP_FAILED\";\r\n\r\nexport function setStatus(status) {\r\n  return {\r\n    type: SET_STATUS,\r\n    payload: status\r\n  };\r\n}\r\n\r\nexport function signOut(firebase) {\r\n  return {\r\n    type: SIGNOUT,\r\n    payload: firebase\r\n  };\r\n}\r\n\r\nexport function signInWithEmailAndPassword(credentials) {\r\n  return {\r\n    type: SIGNIN_EMAL_PASSWORD,\r\n    payload: credentials\r\n  };\r\n}\r\n\r\nexport function signInSuccess(message) {\r\n  return {\r\n    type: SIGNIN_SUCCESS,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function signInFailed(message) {\r\n  return {\r\n    type: SIGNIN_FAILED,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function signOutSuccess(message) {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function signOutFailed(message) {\r\n  return {\r\n    type: SIGNOUT_FAILED,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function signUpWithEmailAndPassword(newUser) {\r\n  return {\r\n    type: SIGNUP_EMAL_PASSWORD,\r\n    payload: newUser\r\n  };\r\n}\r\n\r\nexport function signUpSuccess(message) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function signUpFailed(message) {\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    payload: message\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { signOut } from \"./../../store/actions/authActions\";\r\n\r\nclass SignedInLinks extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { props } = this;\r\n    const { firebase } = props;\r\n    const fireBase = {\r\n      firebase\r\n    };\r\n\r\n    props.signOut(fireBase);\r\n  };\r\n  render() {\r\n    return (\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/createproject\">New Item</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={this.handleSubmit}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {this.props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" />\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    null,\r\n    { signOut }\r\n  )\r\n)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n\r\n      <li>\r\n        <NavLink to=\"/\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Tella Market\r\n        </Link>\r\n        {auth.isLoaded && links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-title\">Notifications</div>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(notification => {\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <span className=\"pink-text\">{notification.user} </span>\r\n                    <span>{notification.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(notification.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by the {project.ownerName} {project.ownerLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSumary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list selection\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notification\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { items, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={items} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.firestore.ordered.items,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"items\", orderBy: [\"createAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetail = props => {\r\n  const { item, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (item) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Project Title - {item.title}</span>\r\n            <p>{item.content}</p>\r\n          </div>\r\n          <div className=\"card-action gret lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {item.ownerName} {item.ownerLastName}\r\n            </div>\r\n            <div>{moment(item.createAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project....</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const items = state.firestore.data.items;\r\n  const item = items ? items[id] : null;\r\n  return {\r\n    item: item,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"items\"\r\n    }\r\n  ])\r\n)(ProjectDetail);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { signInWithEmailAndPassword } from \"./../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const credentials = { ...state };\r\n    const authData = {\r\n      firebase,\r\n      credentials\r\n    };\r\n    props.signInWithEmailAndPassword(authData);\r\n  };\r\n  render() {\r\n    const { authMessage, auth } = this.props;\r\n\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authMessage === \"\" ? null : <p>{authMessage}</p>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authMessage:\r\n    state.auth.messages.length === 0 ? \"\" : state.auth.messages[0].text,\r\n  type: state.auth.messages.length === 0 ? \"\" : state.auth.messages[0].type,\r\n  auth: state.firebase.auth\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { signInWithEmailAndPassword }\r\n  )\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { signUpWithEmailAndPassword } from \"./../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const newUser = { ...state };\r\n    const newUserData = {\r\n      firebase,\r\n      newUser\r\n    };\r\n    props.signUpWithEmailAndPassword(newUserData);\r\n  };\r\n  render() {\r\n    const { auth, authMessage } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authMessage ? <p>{authMessage}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authMessage:\r\n    state.auth.messages.length === 0 ? \"\" : state.auth.messages[0].text,\r\n  auth: state.firebase.auth\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { signUpWithEmailAndPassword }\r\n  )\r\n)(SignUp);\r\n","export const SET_STATUS = \"SET_STATUS\";\r\nexport const CREATE_PROJECT = \"CREATE_PROJECT\";\r\nexport const CREATE_PROJECT_SUCCESS = \"CREATE_PROJECT_SUCCESS\";\r\nexport const CREATE_ITEM_FAILED = \"CREATE_ITEM_FAILED\";\r\nexport const GET_ITEMS = \"GET_ITEMS\";\r\n\r\nexport function setStatus(status) {\r\n  return {\r\n    type: SET_STATUS,\r\n    payload: status\r\n  };\r\n}\r\n\r\nexport function createProject(project) {\r\n  return {\r\n    type: CREATE_PROJECT,\r\n    payload: project\r\n  };\r\n}\r\n\r\nexport function createItemFailed(message) {\r\n  return {\r\n    type: CREATE_ITEM_FAILED,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function createProjectSuccess(id) {\r\n  return {\r\n    type: CREATE_PROJECT_SUCCESS,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function getItems(items) {\r\n  return {\r\n    type: GET_ITEMS,\r\n    payload: items\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"./../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { profile, auth } = this.props;\r\n    const item = {\r\n      ...this.state,\r\n      ownerLastName: profile.lastName,\r\n      ownerName: profile.firstName,\r\n      authId: auth.uid,\r\n      createAt: new Date()\r\n    };\r\n\r\n    this.props.createProject(item);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              className=\"materialize-textarea\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(CreateProject);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./layout/Navbar\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport ProjectDetail from \"./projects/ProjectDetail\";\r\nimport SignIn from \"./auth/SignIn\";\r\nimport SignUp from \"./auth/SignUp\";\r\nimport CreateProject from \"./projects/CreateProject\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (auth.isLoaded) {\r\n      return (\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Dashboard} />\r\n              <Route path=\"/project/:id\" component={ProjectDetail} />\r\n              <Route path=\"/signin\" component={SignIn} />\r\n              <Route path=\"/signup\" component={SignUp} />\r\n              <Route path=\"/createproject\" component={CreateProject} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CREATE_PROJECT_SUCCESS,\r\n  CREATE_ITEM_FAILED,\r\n  GET_ITEMS,\r\n  SET_STATUS\r\n} from \"./../actions/projectActions\";\r\n\r\nconst initState = {\r\n  status: \"idle\", // \"idle\" | \"logout\" | \"pending\" | \"login\" | \"success\" | \"failure\";\r\n  projects: []\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      };\r\n    }\r\n    case CREATE_PROJECT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        status: \"success\",\r\n        idItem: action.payload\r\n      };\r\n    }\r\n    case CREATE_ITEM_FAILED: {\r\n      return {\r\n        ...state,\r\n        status: \"failure\",\r\n        messages: [\r\n          {\r\n            type: \"error\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case GET_ITEMS: {\r\n      return {\r\n        ...state,\r\n        status: \"success\",\r\n        data: action.payload,\r\n        messages: []\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import {\r\n  SET_STATUS,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_FAILED,\r\n  SIGNOUT_FAILED,\r\n  SIGNOUT_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED\r\n} from \"./../actions/authActions\";\r\n\r\nconst initState = {\r\n  status: \"idle\", // \"idle\" |  \"pending\" | \"login\" | \"success\" | \"failure\";\r\n  messages: []\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      };\r\n    }\r\n    case SIGNIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        status: \"success\",\r\n        messages: [\r\n          {\r\n            type: \"ok\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case SIGNIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        status: \"failure\",\r\n        messages: [\r\n          {\r\n            type: \"error\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case SIGNOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        status: \"success\",\r\n        messages: [\r\n          {\r\n            type: \"ok\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case SIGNOUT_FAILED: {\r\n      return {\r\n        ...state,\r\n        status: \"failure\",\r\n        messages: [\r\n          {\r\n            type: \"error\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case SIGNUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        status: \"success\",\r\n        messages: [\r\n          {\r\n            type: \"ok\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case SIGNUP_FAILED: {\r\n      return {\r\n        ...state,\r\n        status: \"failure\",\r\n        messages: [\r\n          {\r\n            type: \"error\",\r\n            text: action.payload\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { getFirestore } from \"redux-firestore\";\r\nimport {\r\n  CREATE_PROJECT,\r\n  createProjectSuccess,\r\n  setStatus,\r\n  createItemFailed\r\n} from \"../store/actions/projectActions\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { ofType } from \"redux-observable\";\r\nimport { concat, of } from \"rxjs\";\r\n\r\nexport default function itemEpics(action$, state$) {\r\n  const getFS = getFirestore();\r\n\r\n  return action$.pipe(\r\n    ofType(CREATE_PROJECT),\r\n    switchMap(action => {\r\n      if (action.type === CREATE_PROJECT) {\r\n        return concat(\r\n          of(setStatus(\"pending\")),\r\n          getFS\r\n            .collection(\"items\")\r\n            .add(action.payload)\r\n            .then(doc => createProjectSuccess(doc.id))\r\n            .catch(err => createItemFailed(err))\r\n        );\r\n      }\r\n    })\r\n  );\r\n}\r\n","import {\r\n  setStatus,\r\n  signInSuccess,\r\n  signOutSuccess,\r\n  signInFailed,\r\n  signOutFailed,\r\n  signUpSuccess,\r\n  signUpFailed,\r\n  SIGNIN_EMAL_PASSWORD,\r\n  SIGNUP_EMAL_PASSWORD,\r\n  SIGNOUT\r\n} from \"../store/actions/authActions\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { ofType } from \"redux-observable\";\r\nimport { concat, of } from \"rxjs\";\r\nimport { getFirestore } from \"redux-firestore\";\r\n\r\nexport default function authEpics(action$, state$) {\r\n  const getFS = getFirestore();\r\n  return action$.pipe(\r\n    ofType(SIGNIN_EMAL_PASSWORD, SIGNUP_EMAL_PASSWORD, SIGNOUT),\r\n    switchMap(action => {\r\n      if (action.type === SIGNIN_EMAL_PASSWORD) {\r\n        return concat(\r\n          of(setStatus(\"pending\")),\r\n          action.payload.firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(\r\n              action.payload.credentials.email,\r\n              action.payload.credentials.password\r\n            )\r\n            .then(() => signInSuccess(\"Loging Success\"))\r\n            .catch(err => signInFailed(err.message))\r\n        );\r\n      } else if (action.type === SIGNOUT) {\r\n        return concat(\r\n          of(setStatus(\"pending\")),\r\n          action.payload.firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => signOutSuccess(\"SignOut Success\"))\r\n            .catch(err => signOutFailed(err.message))\r\n        );\r\n      } else if (action.type === SIGNUP_EMAL_PASSWORD) {\r\n        return concat(\r\n          of(setStatus(\"pending\")),\r\n          action.payload.firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(\r\n              action.payload.newUser.email,\r\n              action.payload.newUser.password\r\n            )\r\n            .then(resp => {\r\n              return getFS\r\n                .collection(\"users\")\r\n                .doc(resp.user.uid)\r\n                .set({\r\n                  firstName: action.payload.newUser.firstName,\r\n                  lastName: action.payload.newUser.lastName,\r\n                  initials:\r\n                    action.payload.newUser.firstName[0] +\r\n                    action.payload.newUser.lastName[0]\r\n                });\r\n            })\r\n            .then(doc => signUpSuccess(doc.id))\r\n            .catch(err => signUpFailed(err.message))\r\n        );\r\n      }\r\n    })\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCQjxOeig-6bzMW1g1yMXarKpoOYzJaqmw\",\r\n  authDomain: \"tellamachines.firebaseapp.com\",\r\n  databaseURL: \"https://tellamachines.firebaseio.com\",\r\n  projectId: \"tellamachines\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"762949691937\",\r\n  appId: \"1:762949691937:web:043b23663160a576\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"./store/configureStore\";\r\nimport FirebaseConfig from \"./config/FirebaseConfig\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\n\r\nconst storeConfigured = configureStore();\r\n\r\nconst rrfConfig = {\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  userProfile: \"users\",\r\n  attachAuthIsReady: true\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase: FirebaseConfig,\r\n  config: rrfConfig,\r\n  dispatch: storeConfigured.dispatch,\r\n  createFirestoreInstance // Create firestore instead of craete it in fbConfig.js\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={storeConfigured}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\";\r\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport projectReducer from \"./reducers/projectReducer\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport itemEpics from \"../epics/itemEpics\";\r\nimport authEpics from \"../epics/authEpics\";\r\nimport FirebaseConfig from \"./../config/FirebaseConfig\";\r\n\r\nexport function configureStore() {\r\n  const rootEpic = combineEpics(itemEpics, authEpics);\r\n\r\n  const epicMiddleware = createEpicMiddleware();\r\n  const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n  });\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n      applyMiddleware(epicMiddleware),\r\n      reduxFirestore(FirebaseConfig)\r\n    )\r\n  );\r\n\r\n  epicMiddleware.run(rootEpic);\r\n  return store;\r\n}\r\n"],"sourceRoot":""}